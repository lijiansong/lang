; ModuleID = 'hello.ir'
source_filename = "hello.ir"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.9"

%struct._SwiftEmptyArrayStorage = type { %struct.HeapObject, %struct._SwiftArrayBodyStorage }
%struct.HeapObject = type { %struct.HeapMetadata*, %struct.InlineRefCounts }
%struct.HeapMetadata = type opaque
%struct.InlineRefCounts = type { i32, i32 }
%struct._SwiftArrayBodyStorage = type { i64, i64 }
%swift.type = type { i64 }
%swift.bridge = type opaque
%Any = type { [24 x i8], %swift.type* }
%TSS = type <{ %Ts11_StringCoreV }>
%Ts11_StringCoreV = type <{ %TSvSg, %TSu, %TyXlSg }>
%TSvSg = type <{ [8 x i8] }>
%TSu = type <{ i64 }>
%TyXlSg = type <{ [8 x i8] }>

@_swiftEmptyArrayStorage = external global %struct._SwiftEmptyArrayStorage, align 8
@_T0SSN = external global %swift.type, align 8
@0 = private unnamed_addr constant [14 x i8] c"Hello, world!\00"
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [1 x i8*] [i8* bitcast (i16* @__swift_reflection_version to i8*)], section "llvm.metadata", align 8

define i32 @main(i32, i8**) #0 {
entry:
  %2 = bitcast i8** %1 to i8*
  %3 = call swiftcc { %swift.bridge*, i8* } @_T0s27_allocateUninitializedArraySayxG_BptBwlFyp_Tgq5(i64 1)
  %4 = extractvalue { %swift.bridge*, i8* } %3, 0
  %5 = extractvalue { %swift.bridge*, i8* } %3, 1
  %6 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* %4) #2
  call void @swift_bridgeObjectRelease(%swift.bridge* %4) #2
  %7 = bitcast i8* %5 to %Any*
  %8 = getelementptr inbounds %Any, %Any* %7, i32 0, i32 1
  store %swift.type* @_T0SSN, %swift.type** %8, align 8
  %9 = getelementptr inbounds %Any, %Any* %7, i32 0, i32 0
  %10 = getelementptr inbounds %Any, %Any* %7, i32 0, i32 0
  %11 = bitcast [24 x i8]* %10 to %TSS*
  %12 = call swiftcc { i64, i64, i64 } @_T0S2SBp21_builtinStringLiteral_Bw17utf8CodeUnitCountBi1_7isASCIItcfC(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @0, i64 0, i64 0), i64 13, i1 true)
  %13 = extractvalue { i64, i64, i64 } %12, 0
  %14 = extractvalue { i64, i64, i64 } %12, 1
  %15 = extractvalue { i64, i64, i64 } %12, 2
  %._core = getelementptr inbounds %TSS, %TSS* %11, i32 0, i32 0
  %._core._baseAddress = getelementptr inbounds %Ts11_StringCoreV, %Ts11_StringCoreV* %._core, i32 0, i32 0
  %16 = bitcast %TSvSg* %._core._baseAddress to i64*
  store i64 %13, i64* %16, align 8
  %._core._countAndFlags = getelementptr inbounds %Ts11_StringCoreV, %Ts11_StringCoreV* %._core, i32 0, i32 1
  %._core._countAndFlags._value = getelementptr inbounds %TSu, %TSu* %._core._countAndFlags, i32 0, i32 0
  store i64 %14, i64* %._core._countAndFlags._value, align 8
  %._core._owner = getelementptr inbounds %Ts11_StringCoreV, %Ts11_StringCoreV* %._core, i32 0, i32 2
  %17 = bitcast %TyXlSg* %._core._owner to i64*
  store i64 %15, i64* %17, align 8
  %18 = call swiftcc { i64, i64, i64 } @_T0s5printySayypGd_SS9separatorSS10terminatortFfA0_()
  %19 = extractvalue { i64, i64, i64 } %18, 0
  %20 = extractvalue { i64, i64, i64 } %18, 1
  %21 = extractvalue { i64, i64, i64 } %18, 2
  %22 = call swiftcc { i64, i64, i64 } @_T0s5printySayypGd_SS9separatorSS10terminatortFfA1_()
  %23 = extractvalue { i64, i64, i64 } %22, 0
  %24 = extractvalue { i64, i64, i64 } %22, 1
  %25 = extractvalue { i64, i64, i64 } %22, 2
  call swiftcc void @_T0s5printySayypGd_SS9separatorSS10terminatortF(%swift.bridge* %4, i64 %19, i64 %20, i64 %21, i64 %23, i64 %24, i64 %25)
  ret i32 0
}

; Function Attrs: noinline
declare swiftcc void @_T0s5printySayypGd_SS9separatorSS10terminatortF(%swift.bridge*, i64, i64, i64, i64, i64, i64) #1

declare swiftcc { %swift.bridge*, i8* } @_T0s27_allocateUninitializedArraySayxG_BptBwlFyp_Tgq5(i64) #0

declare %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge*)

declare void @swift_bridgeObjectRelease(%swift.bridge*)

declare swiftcc { i64, i64, i64 } @_T0S2SBp21_builtinStringLiteral_Bw17utf8CodeUnitCountBi1_7isASCIItcfC(i8*, i64, i1) #0

; Function Attrs: noinline
declare swiftcc { i64, i64, i64 } @_T0s5printySayypGd_SS9separatorSS10terminatortFfA0_() #1

; Function Attrs: noinline
declare swiftcc { i64, i64, i64 } @_T0s5printySayypGd_SS9separatorSS10terminatortFfA1_() #1

attributes #0 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3,+x87" }
attributes #1 = { noinline "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3,+x87" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !10, !11}

!0 = !{i32 1, !"Objective-C Version", i32 2}
!1 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!2 = !{i32 1, !"Objective-C Image Info Section", !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = !{i32 4, !"Objective-C Garbage Collection", i32 1280}
!4 = !{i32 1, !"Objective-C Class Properties", i32 64}
!5 = !{i32 6, !"Linker Options", !6}
!6 = !{!7, !8, !9}
!7 = !{!"-lswiftCore"}
!8 = !{!"-lswiftSwiftOnoneSupport"}
!9 = !{!"-lobjc"}
!10 = !{i32 1, !"PIC Level", i32 2}
!11 = !{i32 1, !"Swift Version", i32 5}
